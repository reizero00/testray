/* jshint ignore:start */
import Component from 'metal-component';
import Soy from 'metal-soy';
var templates;
goog.loadModule(function(exports) {

// This file was automatically generated from ListItem.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace ListItem.
 * @public
 */

goog.module('ListItem.incrementaldom');

/** @suppress {extraRequire} */
var soy = goog.require('soy');
/** @suppress {extraRequire} */
var soydata = goog.require('soydata');
/** @suppress {extraRequire} */
goog.require('goog.i18n.bidi');
/** @suppress {extraRequire} */
goog.require('goog.asserts');
/** @suppress {extraRequire} */
goog.require('goog.string');
var IncrementalDom = goog.require('incrementaldom');
var ie_open = IncrementalDom.elementOpen;
var ie_close = IncrementalDom.elementClose;
var ie_void = IncrementalDom.elementVoid;
var ie_open_start = IncrementalDom.elementOpenStart;
var ie_open_end = IncrementalDom.elementOpenEnd;
var itext = IncrementalDom.text;
var iattr = IncrementalDom.attr;


/**
 * @param {Object<string, *>=} opt_data
 * @param {(null|undefined)=} opt_ignored
 * @param {Object<string, *>=} opt_ijData
 * @return {void}
 * @suppress {checkTypes}
 */
function $render(opt_data, opt_ignored, opt_ijData) {
  ie_open_start('li');
      iattr('class', 'listitem list-group-item ' + (opt_data.elementClasses ? ' ' + opt_data.elementClasses : '') + ' clearfix');
      iattr('data-index', opt_data.index);
      if (opt_data.id) {
        iattr('id', opt_data.id);
      }
      iattr('role', 'listitem');
  ie_open_end();
    if (opt_data.item.avatar) {
      if (opt_data.item.avatar.link) {
        itext(' ');
        ie_open('a', null, null,
            'href', opt_data.item.avatar.link,
            'class', 'avatar-link');
          itext(' ');
        }
        ie_open('span', null, null,
            'class', 'list-image pull-left ' + opt_data.item.avatar['class']);
          var dyn0 = opt_data.item.avatar.content;
          if (typeof dyn0 == 'function') dyn0(); else if (dyn0 != null) itext(dyn0);
        ie_close('span');
        if (opt_data.item.avatar.link) {
          itext(' ');
        ie_close('a');
        itext(' ');
      }
    }
    ie_open('div', null, null,
        'class', 'list-main-content pull-left');
      ie_open('div', null, null,
          'class', 'list-text-primary');
        var dyn1 = opt_data.item.textPrimary;
        if (typeof dyn1 == 'function') dyn1(); else if (dyn1 != null) itext(dyn1);
      ie_close('div');
      if (opt_data.item.textSecondary) {
        ie_open('div', null, null,
            'class', 'list-text-secondary');
          var dyn2 = opt_data.item.textSecondary;
          if (typeof dyn2 == 'function') dyn2(); else if (dyn2 != null) itext(dyn2);
        ie_close('div');
      }
    ie_close('div');
    if (opt_data.item.icons) {
      var iconList66 = opt_data.item.icons;
      var iconListLen66 = iconList66.length;
      for (var iconIndex66 = 0; iconIndex66 < iconListLen66; iconIndex66++) {
        var iconData66 = iconList66[iconIndex66];
        ie_void('span', null, null,
            'class', 'btn-icon ' + iconData66 + ' pull-right');
      }
    }
    if (opt_data.item.iconsHtml) {
      ie_open('div', null, null,
          'class', 'pull-right');
        var iconHtmlList72 = opt_data.item.iconsHtml;
        var iconHtmlListLen72 = iconHtmlList72.length;
        for (var iconHtmlIndex72 = 0; iconHtmlIndex72 < iconHtmlListLen72; iconHtmlIndex72++) {
          var iconHtmlData72 = iconHtmlList72[iconHtmlIndex72];
          var dyn3 = iconHtmlData72;
          if (typeof dyn3 == 'function') dyn3(); else if (dyn3 != null) itext(dyn3);
        }
      ie_close('div');
    }
    if (opt_data.item.label) {
      ie_open('span', null, null,
          'class', 'label list-label pull-right ' + opt_data.item.label['class']);
        var dyn4 = opt_data.item.label.content;
        if (typeof dyn4 == 'function') dyn4(); else if (dyn4 != null) itext(dyn4);
      ie_close('span');
    }
  ie_close('li');
}
exports.render = $render;
if (goog.DEBUG) {
  $render.soyTemplateName = 'ListItem.render';
}

exports.render.params = ["id","index","item","elementClasses"];
exports.render.types = {"id":"any","index":"any","item":"any","elementClasses":"any"};
templates = exports;
return exports;

});

class ListItem extends Component {}
Soy.register(ListItem, templates);
export { ListItem, templates };
export default templates;
/* jshint ignore:end */
