/* jshint ignore:start */
import Component from 'metal-component';
import Soy from 'metal-soy';
var templates;
goog.loadModule(function(exports) {

// This file was automatically generated from List.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace List.
 * @public
 */

goog.module('List.incrementaldom');

/** @suppress {extraRequire} */
var soy = goog.require('soy');
/** @suppress {extraRequire} */
var soydata = goog.require('soydata');
/** @suppress {extraRequire} */
goog.require('goog.asserts');
/** @suppress {extraRequire} */
goog.require('soy.asserts');
/** @suppress {extraRequire} */
goog.require('goog.i18n.bidi');
/** @suppress {extraRequire} */
goog.require('goog.string');
var IncrementalDom = goog.require('incrementaldom');
var ie_open = IncrementalDom.elementOpen;
var ie_close = IncrementalDom.elementClose;
var ie_void = IncrementalDom.elementVoid;
var ie_open_start = IncrementalDom.elementOpenStart;
var ie_open_end = IncrementalDom.elementOpenEnd;
var itext = IncrementalDom.text;
var iattr = IncrementalDom.attr;

var $templateAlias1 = Soy.getTemplate('ListItem.incrementaldom', 'render');


/**
 * @param {{
 *    id: (?),
 *    elementClasses: (?),
 *    items: (?),
 *    itemsHtml: (?soydata.SanitizedHtml|string|undefined)
 * }} opt_data
 * @param {(null|undefined)=} opt_ignored
 * @param {Object<string, *>=} opt_ijData
 * @return {void}
 * @suppress {checkTypes}
 */
function $render(opt_data, opt_ignored, opt_ijData) {
  opt_data = opt_data || {};
  soy.asserts.assertType(opt_data.itemsHtml == null || (opt_data.itemsHtml instanceof Function) || (opt_data.itemsHtml instanceof soydata.UnsanitizedText) || goog.isString(opt_data.itemsHtml), 'itemsHtml', opt_data.itemsHtml, '?soydata.SanitizedHtml|string|undefined');
  var itemsHtml = /** @type {?soydata.SanitizedHtml|string|undefined} */ (opt_data.itemsHtml);
  ie_open('div', null, null,
      'class', 'list' + (opt_data.elementClasses ? ' ' + opt_data.elementClasses : ''));
    ie_open_start('ul');
        iattr('class', 'list-group');
        iattr('data-onclick', 'handleClick');
        if (opt_data.id) {
          iattr('id', opt_data.id);
        }
        iattr('role', 'list');
    ie_open_end();
      if (itemsHtml != null) {
        itemsHtml();
      } else {
        var itemList21 = opt_data.items;
        var itemListLen21 = itemList21.length;
        for (var itemIndex21 = 0; itemIndex21 < itemListLen21; itemIndex21++) {
          var itemData21 = itemList21[itemIndex21];
          $templateAlias1({id: opt_data.id + '-item-' + (itemIndex21 + 1), index: itemIndex21, item: itemData21, key: '-items-' + itemIndex21}, null, opt_ijData);
        }
      }
    ie_close('ul');
  ie_close('div');
}
exports.render = $render;
if (goog.DEBUG) {
  $render.soyTemplateName = 'List.render';
}

exports.render.params = ["itemsHtml","id","elementClasses","items"];
exports.render.types = {"itemsHtml":"html","id":"any","elementClasses":"any","items":"any"};
templates = exports;
return exports;

});

class List extends Component {}
Soy.register(List, templates);
export { List, templates };
export default templates;
/* jshint ignore:end */
